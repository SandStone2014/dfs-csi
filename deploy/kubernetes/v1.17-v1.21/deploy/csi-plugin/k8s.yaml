# DO NOT EDIT: generated by 'kustomize build'
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-controller-sa
  namespace: szsandstone
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-node-sa
  namespace: szsandstone
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-external-node-service-role
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - create
      - update
      - delete
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - nodes/proxy
    verbs:
      - '*'
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-external-provisioner-role
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - delete
      - patch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups: [""]
    resources: ["persistentvolumeclaims/status"]
    verbs: ["update", "patch"]
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents"]
    verbs: ["create", "get", "list", "watch", "update", "delete"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshotcontents/status"]
    verbs: ["update"]
  - apiGroups: ["snapshot.storage.k8s.io"]
    resources: ["volumesnapshots"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-node-service-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mosfs-csi-external-node-service-role
subjects:
  - kind: ServiceAccount
    name: mosfs-csi-node-sa
    namespace: szsandstone
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-provisioner-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mosfs-external-provisioner-role
subjects:
  - kind: ServiceAccount
    name: mosfs-csi-controller-sa
    namespace: szsandstone
---
kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  # replace with non-default namespace name
  namespace: szsandstone
  name: mosfs-external-provisioner-cfg
rules:
  - apiGroups: [""]
    resources: ["endpoints"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "list", "watch", "create", "delete","update"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]

---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: mosfs-csi-provisioner-role-cfg
  # replace with non-default namespace name
  namespace: szsandstone
subjects:
  - kind: ServiceAccount
    name: mosfs-csi-controller-sa
    # replace with non-default namespace name
    namespace: szsandstone
roleRef:
  kind: Role
  name: mosfs-external-provisioner-cfg
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-controller
  namespace: szsandstone
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mosfs-csi-controller
      app.kubernetes.io/instance: mosfs-csi-driver
      app.kubernetes.io/name: mosfs-csi-driver
      app.kubernetes.io/version: master
  serviceName: mosfs-csi-controller
  template:
    metadata:
      labels:
        app: mosfs-csi-controller
        app.kubernetes.io/instance: mosfs-csi-driver
        app.kubernetes.io/name: mosfs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
        - name: mosfs-plugin
          image: szsandstone/mosfs-csi-driver:v1.0.4
          args:
            - --endpoint=$(CSI_ENDPOINT)
            - --logtostderr
            - --nodeid=$(NODE_ID)
            - --v=5
          env:
            - name: CSI_ENDPOINT
              value: unix:///var/lib/csi/sockets/pluginproxy/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MOSFS_MOUNT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MOSFS_MOUNT_PATH
              value: /var/lib/mosfs/volume
            - name: MOSFS_CONFIG_PATH
              value: /var/lib/mosfs/config
            - name: STORAGE_CLASS_SHARE_MOUNT
              value: "true"
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          ports:
            - containerPort: 9909
              name: healthz
              protocol: TCP
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
            - mountPath: /etc/ceph
              name: ceph-conf
            - mountPath: /mosfs
              mountPropagation: Bidirectional
              name: mosfs-dir
            - mountPath: /root/.juicefs
              mountPropagation: Bidirectional
              name: mosfs-root-dir
        - name: csi-provisioner
          image: registry.k8s.io/sig-storage/csi-provisioner:v3.0.0
          args:
            - --csi-address=$(ADDRESS)
            - --timeout=60s
            - --v=5
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          volumeMounts:
            - mountPath: /var/lib/csi/sockets/pluginproxy/
              name: socket-dir
        - name: csi-snapshotter
          image: registry.k8s.io/sig-storage/csi-snapshotter:v4.1.1
          args:
            - "--csi-address=$(ADDRESS)"
            - "--timeout=15s"
            - "--v=5"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
            - name: TZ
              value: "Asia/Shanghai"
          imagePullPolicy: "IfNotPresent"
          securityContext:
            privileged: true
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: csi-resizer
          image: quay.io/k8scsi/csi-resizer:v1.0.0
          args:
            - "--csi-address=$(ADDRESS)"
            - "--v=5"
            - "--timeout=150s"
            - "--leader-election"
          env:
            - name: ADDRESS
              value: /var/lib/csi/sockets/pluginproxy/csi.sock
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
            - name: socket-dir
              mountPath: /var/lib/csi/sockets/pluginproxy/
        - name: liveness-probe
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          args:
            - --csi-address=$(ADDRESS)
            - --health-port=$(HEALTH_PORT)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: HEALTH_PORT
              value: "9909"
          volumeMounts:
            - mountPath: /csi
              name: socket-dir
      priorityClassName: system-cluster-critical
      serviceAccount: mosfs-csi-controller-sa
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - emptyDir: {}
          name: socket-dir
        - hostPath:
            path: /var/lib/mosfs/volume
            type: DirectoryOrCreate
          name: mosfs-dir
        - hostPath:
            path: /var/lib/mosfs/config
            type: DirectoryOrCreate
          name: mosfs-root-dir
        - secret:
            secretName: ceph-conf
          name: ceph-conf
  volumeClaimTemplates: []
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: node
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: mosfs-csi-node
  namespace: szsandstone
spec:
  selector:
    matchLabels:
      app: mosfs-csi-node
      app.kubernetes.io/instance: mosfs-csi-driver
      app.kubernetes.io/name: mosfs-csi-driver
      app.kubernetes.io/version: master
  template:
    metadata:
      labels:
        app: mosfs-csi-node
        app.kubernetes.io/instance: mosfs-csi-driver
        app.kubernetes.io/name: mosfs-csi-driver
        app.kubernetes.io/version: master
    spec:
      containers:
        - args:
            - --endpoint=$(CSI_ENDPOINT)
            - --logtostderr
            - --nodeid=$(NODE_ID)
            - --v=5
            - --enable-manager=true
          env:
            - name: CSI_ENDPOINT
              value: unix:/csi/csi.sock
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MOSFS_MOUNT_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MOSFS_MOUNT_PATH
              value: /var/lib/mosfs/volume
            - name: MOSFS_CONFIG_PATH
              value: /var/lib/mosfs/config
            - name: STORAGE_CLASS_SHARE_MOUNT
              value: "true"
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: KUBELET_PORT
              value: "10250"
          image: szsandstone/mosfs-csi-driver:v1.0.4
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
          name: mosfs-plugin
          ports:
            - containerPort: 9909
              name: healthz
              protocol: TCP
          resources:
            limits:
              cpu: 2000m
              memory: 5Gi
            requests:
              cpu: 1000m
              memory: 1Gi
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /etc/ceph
              name: ceph-conf
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /mosfs
              mountPropagation: Bidirectional
              name: mosfs-dir
            - mountPath: /root/.juicefs
              mountPropagation: Bidirectional
              name: mosfs-root-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=5
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/csi-plugins/csi-sandstone-mosfsplugin/csi.sock
          image: quay.io/k8scsi/csi-node-driver-registrar:v1.3.0
          name: node-driver-registrar
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /registration
              name: registration-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --health-port=$(HEALTH_PORT)
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: HEALTH_PORT
              value: "9909"
          image: quay.io/k8scsi/livenessprobe:v1.1.0
          name: liveness-probe
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
      dnsPolicy: ClusterFirstWithHostNet
      priorityClassName: system-node-critical
      serviceAccount: mosfs-csi-node-sa
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /var/lib/kubelet/csi-plugins/csi-sandstone-mosfsplugin/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /var/lib/mosfs/volume
            type: DirectoryOrCreate
          name: mosfs-dir
        - hostPath:
            path: /var/lib/mosfs/config
            type: DirectoryOrCreate
          name: mosfs-root-dir
        - secret:
            secretName: ceph-conf
          name: ceph-conf
---
apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  labels:
    app.kubernetes.io/instance: mosfs-csi-driver
    app.kubernetes.io/name: mosfs-csi-driver
    app.kubernetes.io/version: master
  name: csi-sandstone-mosfsplugin
spec:
  attachRequired: false
  podInfoOnMount: true