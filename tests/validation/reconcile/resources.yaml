apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: juicefs-sc
  namespace: default
provisioner: csi.juicefs.com
parameters:
  csi.storage.k8s.io/provisioner-secret-name: $(SECRET_NAME)
  csi.storage.k8s.io/provisioner-secret-namespace: $(SECRET_NAMESPACE)
  csi.storage.k8s.io/node-publish-secret-name: $(SECRET_NAME)
  csi.storage.k8s.io/node-publish-secret-namespace: $(SECRET_NAMESPACE)
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: juicefs-pvc
  namespace: default
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10Pi
  storageClassName: juicefs-sc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: juicefs-writer
  namespace: default
spec:
  selector:
    matchLabels:
      app: juicefs-writer
  template:
    metadata:
      name: juicefs-writer
      labels:
        app: juicefs-writer
    spec:
      containers:
      - args:
        - -o
        - errexit
        - -c
        - while true; do echo $(date -u) >> /jfs/out.txt; sleep 1; done
        command:
        - /bin/sh
        image: busybox
        name: app
        volumeMounts:
        - mountPath: /jfs
          name: juicefs-pv
      volumes:
      - name: juicefs-pv
        persistentVolumeClaim:
          claimName: juicefs-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: juicefs-reader
  namespace: default
spec:
  selector:
    matchLabels:
      app: juicefs-reader
  template:
    metadata:
      name: juicefs-reader
      labels:
        app: juicefs-reader
    spec:
      containers:
      - args:
        - -o
        - errexit
        - -c
        - tail -f /jfs/out.txt;
        command:
        - /bin/sh
        image: busybox
        name: app
        volumeMounts:
        - mountPath: /jfs
          name: juicefs-pv
      volumes:
      - name: juicefs-pv
        persistentVolumeClaim:
          claimName: juicefs-pvc
